name: Dependency Update

on:
  schedule:
    # Run every Monday at 9 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  update-dependencies:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup .NET
        uses: actions/setup-dotnet@v4

      - name: Restore dependencies
        run: dotnet restore

      - name: Check for outdated packages
        id: outdated
        run: |
          echo "Checking for outdated packages..."
          dotnet list package --outdated --include-transitive > outdated.txt
          if [ -s outdated.txt ]; then
            echo "has_updates=true" >> $GITHUB_OUTPUT
            echo "Found outdated packages:"
            cat outdated.txt
          else
            echo "has_updates=false" >> $GITHUB_OUTPUT
            echo "No outdated packages found"
          fi

      - name: Update packages
        if: steps.outdated.outputs.has_updates == 'true'
        run: |
          echo "Updating packages..."
          # Update packages to latest versions
          dotnet add package --version * --prerelease
          # This is a simplified approach - in practice, you'd want more sophisticated logic

      - name: Create Pull Request
        if: steps.outdated.outputs.has_updates == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'chore: update dependencies'
          title: 'chore: update dependencies'
          body: |
            This PR updates outdated dependencies to their latest versions.

            **Updated packages:**
            ```bash
            $(cat outdated.txt)
            ```

            **Please review the changes and test thoroughly before merging.**
          branch: dependency-update
          delete-branch: true
